---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import MarkdownIt from 'markdown-it';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

const isDev = import.meta.env.DEV;

const posts = (await getCollection('blog'))
.filter(
	// only published posts make it to production
	(post) => post.data.published || isDev
).sort(
	// newest posts first
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const stripHtml = (html: string) => {
	return html.replace(/<\/?[^>]+(>|$)/g, '');
};

// Removes leading "import" lines (allowed in mdx).
// Obviously this means our mdx is somewhat limited,
// but this can be adjusted to strip out more, if needed.
// Alternatively, could try: https://stackoverflow.com/a/77537167
const stripMdx = (mdx: string) => {
	if (mdx.trim().startsWith('import ')) {
		return '';
	}
	return mdx;
};

// Modified verison of:
// https://www.paulie.dev/posts/2023/09/how-to-create-excerpts-with-astro/
const createExcerpt = (body: string, maxChars: number) => {
	const parser = new MarkdownIt();
	return parser
		.render(body) // render markdown as html (Note: any mdx code still exists after render())
		.split('\n')  // split into array of lines
		.slice(0, 10) // take first 10 lines (might need more if post has lots of leading mdx)
		.map((str: string) => {
			let s = stripHtml(str);
			s = stripMdx(s);
			return s.split('\n'); // return array
		})
		.flat()		// concat arrays
		.join(' ')	// concat into string
		.substring(0, maxChars)	// take up to maxChars
		.trim();	// trim whitespace
};
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			main {
				width: 960px;
			}
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 2rem;
				list-style-type: none;
				margin: 0;
				padding: 0;
			}
			ul li {
				width: calc(50% - 1rem);
			}
			ul li * {
				text-decoration: none;
				transition: 0.2s ease;
			}
			ul li:first-child {
				width: 100%;
				margin-bottom: 1rem;
				text-align: center;
			}
			ul li:first-child img {
				width: 100%;
			}
			ul li:first-child .title {
				font-size: 2.369rem;
			}
			ul li img {
				margin-bottom: 0.5rem;
				border-radius: 12px;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
			ul li a:hover h4,
			ul li a:hover .date {
				color: rgb(var(--accent));
			}
			ul a:hover img {
				box-shadow: var(--box-shadow);
			}
			@media (max-width: 720px) {
				ul {
					gap: 0.5em;
				}
				ul li {
					width: 100%;
					text-align: center;
				}
				ul li:first-child {
					margin-bottom: 0;
				}
				ul li:first-child .title {
					font-size: 1.563em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<ul>
					{
						posts.map((post) => {
							const excerpt = `${createExcerpt(post.body, 280)}...`;

							return (
								<li>
									<a href={`/blog/${post.slug}`}>
										<h4 class="title">{post.data.title}</h4>
										<p class="date">
											<FormattedDate date={post.data.pubDate} />
										</p>
										<div set:html={excerpt}></div>
									</a>
								</li>
							);
						})
					}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>
